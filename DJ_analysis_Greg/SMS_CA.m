function R = SMS_CA(data_group, params)

datasets = aka.Dataset & data_group;
datasets_struct = fetch(datasets);
%all_epochs = aka.Epoch & data_group;
N_datasets = datasets.count;

R = table('Size',[N_datasets, 13], 'VariableNames', ...
    {'file_name', ...
    'dataset_name', ...
    'spot_sizes', ...
    'pre_time_ms', ...
    'stim_time_ms', ...
    'tail_time_ms', ...
    'n_epochs_per_size', ...
    'spikes_pre_mean', ...
    'spikes_stim_mean', ...
    'spikes_tail_mean', ...
    'spikes_stim_sem', ...
    'spikes_tail_sem', ...
    'baseline_rate_hz'...
    }, ...
    'VariableTypes', ...
    {'string', ...
    'string', ...
    'cell', ...
    'uint16', ...
    'uint16', ...
    'uint16', ...
    'cell', ...
    'cell', ...
    'cell', ...
    'cell', ...
    'cell', ...
    'cell', ...
    'double'...
    });

%assign UserData of table to be the table name
R.Properties.UserData = 'SMS_CA';

%assign test descriptions for some of the variables 
R.Properties.VariableDescriptions = ...
    {'file name from symphony', ...
    'dataset name', ...
    'set of spot sizes (microns)', ...
    'time before stimulus onset (ms)', ...
    'stimulus presentation time (ms)', ...
    'time after stimulus offset (ms)', ...
    'vector with how many trials for each spot size', ...
    'spike count in pre time, mean', ...
    'spike count in stim time, mean', ...
    'spike count in tail time, mean', ...
    'spike count in stim time, standard error of the mean', ...
    'spike count in tail time, standard error of the mean', ...
    'baseline firing rate (in pre time) averaged across spot sizes (Hz)'...
    };

for d=1:N_datasets
    tic;
    fprintf('Processing %d of %d, %s:%s\n', d, N_datasets, datasets_struct(d).file_name, datasets_struct(d).dataset_name);

    epochs_in_dataset = fetch(sln_symphony.DatasetEpoch * ...
        sln_symphony.ExperimentProtocolSpotsMultiSizeV1BlockParameters * ...
        sln_symphony.ExperimentProtocolSpotsMultiSizeV1EpochParameters & ...
        datasets_struct(d),'*');
    N_epochs = length(epochs_in_dataset);

    if N_epochs == 0
        error(sprintf('No epochs in dataset: %s', datasets_struct(d).dataset_name));
    end

    %parameters to save for the whole dataset
    %rstar_mean = epochs_in_dataset(1).rstar_mean;
    pre_stim_tail = struct('pre_time', epochs_in_dataset(1).pre_time, ...
        'stim_time', epochs_in_dataset(1).stim_time, ...
        'tail_time', epochs_in_dataset(1).tail_time);

    all_spot_sizes = round([epochs_in_dataset.cur_spot_size]);
    spot_sizes = sort(unique(all_spot_sizes));
    N_spot_sizes = length(spot_sizes);

    N_epochs_per_size = zeros(N_spot_sizes,1);
    spikes_pre_mean = zeros(N_spot_sizes,1);
    spikes_stim_mean = zeros(N_spot_sizes,1);
    spikes_tail_mean = zeros(N_spot_sizes,1);
    spikes_stim_sem = zeros(N_spot_sizes,1);
    spikes_tail_sem = zeros(N_spot_sizes,1);

    for s=1:N_spot_sizes
        ind = find(all_spot_sizes == spot_sizes(s));
        N_epochs_per_size(s) = length(ind);
        pre_spikes = zeros(N_epochs_per_size(s),1);
        stim_spikes = zeros(N_epochs_per_size(s),1);
        tail_spikes = zeros(N_epochs_per_size(s),1);
        for i=1:N_epochs_per_size(s)
            pre_spikes(i) = spikes_in_interval(epochs_in_dataset(ind(i)),pre_stim_tail,'pre');
            stim_spikes(i) = spikes_in_interval(epochs_in_dataset(ind(i)),pre_stim_tail,'stim');
            tail_spikes(i) = spikes_in_interval(epochs_in_dataset(ind(i)),pre_stim_tail,'tail');
        end
        spikes_pre_mean(s) = mean(pre_spikes);
        spikes_stim_mean(s) = mean(stim_spikes);
        spikes_tail_mean(s) = mean(tail_spikes);
        spikes_stim_sem(s) = std(stim_spikes)./sqrt(N_epochs_per_size(s)-1);
        spikes_tail_sem(s) = std(tail_spikes)./sqrt(N_epochs_per_size(s)-1);
    end

    baseline_rate = mean(spikes_pre_mean) / (pre_stim_tail.pre_time / 1E3); %baseline rate in Hz

    %set table variables
    R.file_name(d) = datasets_struct(d).file_name;
    R.dataset_name(d) = datasets_struct(d).dataset_name;
    R.spot_sizes(d) = {spot_sizes};
    R.pre_time_ms(d) = pre_stim_tail.pre_time;
    R.stim_time_ms(d) = pre_stim_tail.stim_time;
    R.tail_time_ms(d) = pre_stim_tail.tail_time;
    R.n_epochs_per_size(d) = {N_epochs_per_size};
    R.spikes_pre_mean(d) = {spikes_pre_mean};
    R.spikes_stim_mean(d) = {spikes_stim_mean};
    R.spikes_tail_mean(d) = {spikes_tail_mean};
    R.spikes_stim_sem(d) = {spikes_stim_sem};
    R.spikes_tail_sem(d) = {spikes_tail_sem};
    R.baseline_rate_hz(d) = baseline_rate;
    fprintf('Elapsed time = %d seconds\n', toc);
end


