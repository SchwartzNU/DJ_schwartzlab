function R = MovingObject_CA(data_group, params)
bin_size = 10;

datasets = aka.Dataset & data_group;
datasets_struct = fetch(datasets);
N_datasets = datasets.count;

R = table('Size',[N_datasets, 14], 'VariableNames', ...
    {'file_name', ...
    'dataset_name', ...
    'source_id', ...
    'speeds', ...
    'directions', ...
    'speed_by_condition', ...
    'direction_by_condition', ...
    'peak_firing_rate', ...
    'peak_firing_time', ...
    'peak_firing_time_from_center', ...
    'n_epochs_per_condition', ...
    'psth_x_by_condition', ...
    'psth_y_by_condition'...
    'psth_x_from_center_by_condition'...
    }, ...
    'VariableTypes', ...
    {'string', ...
    'string', ...
    'uint16', ...
    'cell', ...
    'cell', ...
    'cell', ...
    'cell', ...
    'cell', ...
    'cell', ...
    'cell', ...
    'cell', ...
    'cell', ... %actually struct
    'cell', ... %actually struct
    'cell'...   %actually struct
    });

%assign UserData of table to be the table name
R.Properties.UserData = 'MovingObject_CA';

%assign test descriptions for some of the variables
R.Properties.VariableDescriptions = ...
    {'file name from symphony', ...
    'dataset name', ...
    'source id used to identify the cell to which the dataset belongs', ...
    'set of speeds (microns / sec)', ...
    'set of directions (degrees)', ...
    'speed for each condition', ...
    'direction for each condition', ...
    'peak firing rate (Hz)', ...
    'peak_firing_time from start of epoch (ms)', ...
    'peak firing time relative to time object is in screen center (ms)', ...
    'number of epochs in each condition', ...
    'struct of psth time axis for each condition', ...
    'struct of psth firing rate axis for each condition', ...
    'psth time axis recentered on the time the objet is in screen center', ...
    };

for d=1:N_datasets
    tic;
    fprintf('Processing %d of %d, %s:%s\n', d, N_datasets, datasets_struct(d).file_name, datasets_struct(d).dataset_name);

    epochs_in_dataset = sln_symphony.DatasetEpoch * ...
        sln_symphony.ExperimentEpoch * ...
        sln_symphony.ExperimentProtocolMovingObjectV1BlockParameters * ...
        sln_symphony.ExperimentProtocolMovingObjectV1EpochParameters & ...
        datasets_struct(d);
    ep_ids = fetch(epochs_in_dataset);

    N_epochs = length(epochs_in_dataset);

    if N_epochs == 0
        error('No epochs in dataset: %s', datasets_struct(d).dataset_name);
    end

    %parameters to save for the whole dataset
    %     pre_stim_tail = struct('pre_time', epochs_in_dataset(1).pre_time, ...
    %         'stim_time', epochs_in_dataset(1).stim_time, ...
    %         'tail_time', epochs_in_dataset(1).tail_time);

    all_speeds = round(fetchn(epochs_in_dataset,'speed'));
    speeds = sort(unique(all_speeds));
    N_speeds = length(speeds);

    all_directions = round(fetchn(epochs_in_dataset,'direction'));
    directions = sort(unique(all_directions));
    N_directions = length(directions);

    Nconditions = N_speeds * N_directions;

    N_epochs_per_condition = zeros(Nconditions,1);
    speed_by_condition = zeros(Nconditions,1);
    direction_by_condition = zeros(Nconditions,1);
    peak_firing_rate = zeros(Nconditions,1);
    peak_firing_time = zeros(Nconditions,1);
    peak_firing_time_from_center = zeros(Nconditions,1);
    center_time_ms = zeros(Nconditions,1);
    duration_ms = zeros(Nconditions,1);
    %     spikes_pre_mean = zeros(N_spot_sizes,1);
    %     spikes_stim_mean = zeros(N_spot_sizes,1);
    %     spikes_tail_mean = zeros(N_spot_sizes,1);
    %     spikes_stim_sem = zeros(N_spot_sizes,1);
    %     spikes_tail_sem = zeros(N_spot_sizes,1);

    c = 1;
    for s=1:N_speeds
        for dir = 1:N_directions
            condition_name_y = sprintf('FR_speed_%d_direction_%d',speeds(s),directions(dir));
            condition_name_x = sprintf('X_speed_%d_direction_%d',speeds(s),directions(dir));
            condition_name_x_centered = sprintf('Xcentered_speed_%d_direction_%d',speeds(s),directions(dir));
            speed_by_condition(c) = speeds(s);
            direction_by_condition(c) = directions(dir);
            ind = find(all_speeds == speeds(s) & all_directions == directions(dir));

            N_epochs_per_condition(c) = length(ind);
            ep = epochs_in_dataset & ep_ids(ind);
            sample_ep = fetch(epochs_in_dataset & ep_ids(ind(1)), '*');
            duration_ms(c) = double(sample_ep.epoch_duration);
            center_time_ms(c) = duration_ms(c) / 2 + double(sample_ep.center_time_shift);

            [psth_x, psth_y] = psth_for_epochs(ep,bin_size);
            [peak_rate, ind] = max(psth_y);
            peak_firing_rate(c) = peak_rate;
            peak_firing_time(c) = psth_x(ind);

            psth_x_from_center = psth_x - (1E3 * center_time_ms(c));
            peak_firing_time_from_center(c) = psth_x_from_center(ind);

            psth_x_by_condition.(condition_name_x) = psth_x;
            psth_y_by_condition.(condition_name_y) = psth_y;   
            psth_x_from_center_by_condition.(condition_name_x_centered) = psth_x_from_center;
            c=c+1;
        end
    end

    %set table variables
    R.file_name(d) = datasets_struct(d).file_name;
    R.dataset_name(d) = datasets_struct(d).dataset_name;
    R.source_id(d) = datasets_struct(d).source_id;
    R.speeds(d) = {speeds'};
    R.directions(d) = {directions'};
    R.speed_by_condition(d) = {speed_by_condition};
    R.direction_by_condition(d) = {direction_by_condition};
    R.peak_firing_rate(d) = {peak_firing_rate};
    R.peak_firing_time(d) = {peak_firing_time};
    R.peak_firing_time_from_center(d) = {peak_firing_time_from_center};
    R.n_epochs_per_condition(d) = {N_epochs_per_condition};
    R.psth_x_by_condition(d) = {psth_x_by_condition};
    R.psth_y_by_condition(d) = {psth_y_by_condition};
    R.psth_x_from_center_by_condition(d) = {psth_x_from_center_by_condition};

    fprintf('Elapsed time = %d seconds\n', round(toc));
end


