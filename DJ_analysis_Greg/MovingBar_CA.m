function R = MovingBar_CA(data_group, params)
if nargin < 2 || isempty(params)
    binSize = 10;
else
    binSize = params.binSize;
end

datasets = aka.Dataset & data_group;
datasets_struct = fetch(datasets);
N_datasets = datasets.count;

R = table('Size',[N_datasets, 30], 'VariableNames', ...
    {'file_name', ...
    'dataset_name', ...
    'source_id', ...
    'bar_angles', ...
    'bar_length', ...
    'bar_speed', ...
    'bar_width', ...
    'bar_distance', ...
    'pre_time_ms', ...
    'stim_time_ms', ...
    'tail_time_ms', ...
    'n_epochs_per_angle', ...
    'spikes_full_mean', ...
    'spikes_leading_mean', ...
    'spikes_trailing_mean', ...
    'spikes_full_sem', ...
    'spikes_leading_sem', ...
    'spikes_trailing_sem', ...    
    'psth_by_angle', ...
    'psth_x', ...
    'leading_trailing_index', ...
    'peak_rate_leading', ...
    'peak_rate_trailing'...
    'dsi', ...
    'ds_ang', ...
    'dsi_leading', ...
    'ds_ang_leading', ...
    'dsi_trailing', ...
    'ds_ang_trailing', ...
    'baseline_rate_hz'...
    }, ...
    'VariableTypes', ...
    {'string', ...
    'string', ...
    'uint16', ...
    'cell', ...
    'uint16', ...
    'uint16', ...
    'uint16', ...
    'uint16', ...
    'uint16', ...
    'uint16', ...
    'uint16', ...
    'cell', ...
    'cell', ...
    'cell', ...
    'cell', ...
    'cell', ...
    'cell', ...
    'cell', ...
    'cell', ...
    'cell', ...
    'cell', ...
    'cell', ...
    'cell', ...
    'singlenan', ...
    'singlenan', ...
    'singlenan', ...
    'singlenan', ...
    'singlenan', ...
    'singlenan', ...
    'double'...
    });

%assign UserData of table to be the table name
R.Properties.UserData = 'MovingBar_CA';

%assign test descriptions for some of the variables 
R.Properties.VariableDescriptions = ...
    {'file name from symphony', ...
    'dataset name', ... 
    'source id used to identify the cell to which the dataset belongs', ...
    'set of bar angles (degrees)', ...
    'bar length (microns)', ... %along axis of motion
    'bar speed (microns per second)', ...
    'bar width (microns', ... %orthogonal to axis of motion
    'travel distance (microns)', ...
    'time before stimulus onset (ms)', ...
    'stimulus presentation time (ms)', ...
    'time after stimulus offset (ms)', ...
    'vector with how many trials for each angle', ...
    'spike count during bar movement mean', ...
    'spike count during first half of bar movement (leading edge), mean', ...
    'spike count during second half of bar movement (trailing edge), mean', ...
    'spike count during bar movement sem', ...
    'spike count during first half of bar movement (leading edge), sem', ...
    'spike count during second half of bar movement (trailing edge), sem', ...
    'psth image by bar angle with 10 ms bins or other binning if specified in params', ...
    'x (time) values for psth (seconds)', ...
    'spike count index defined as (leading - trailing) / (leading + trailing)', ...
    'peak firing rate during the first half of the movement (Hz)', ...
    'peak firing rate during the second half of the movement (Hz)', ...
    'vector sum dsi for the full movement period', ...
    'ds angle for the full movement period (degrees)', ...
    'vector sum dsi for the leading period', ...
    'ds angle for the leading period (degrees)', ...
    'vector sum dsi for the trailing period', ...
    'ds angle for the trailing period (degrees)', ...
    'baseline spike rate in pre time (Hz)' ...
    };

for d=1:N_datasets
    tic;
    fprintf('Processing %d of %d, %s_sourceid%d:%s\n', d, N_datasets, datasets_struct(d).file_name, datasets_struct(d).source_id, datasets_struct(d).dataset_name);

    epochs_in_dataset_table = sln_symphony.DatasetEpoch * ...
                sln_symphony.ExperimentEpoch & ...
                datasets_struct(d);
    epochs_in_dataset = fetch(sln_symphony.DatasetEpoch * ...
        sln_symphony.ExperimentProtocolMovingBarV1BlockParameters * ...
        sln_symphony.ExperimentProtocolMovingBarV1EpochParameters & ...
        datasets_struct(d),'*');
    N_epochs = length(epochs_in_dataset);

    if N_epochs == 0
        error('No epochs in dataset: %s', datasets_struct(d).dataset_name);
    end

    %parameters to save for the whole dataset
    %rstar_mean = epochs_in_dataset(1).rstar_mean;
    pre_stim_tail = struct('pre_time', epochs_in_dataset(1).pre_time, ...
        'stim_time', epochs_in_dataset(1).stim_time, ...
        'tail_time', epochs_in_dataset(1).tail_time);
    total_ms = pre_stim_tail.pre_time + pre_stim_tail.stim_time + pre_stim_tail.tail_time;
    bar_length = epochs_in_dataset(1).bar_length;
    bar_width = epochs_in_dataset(1).bar_width;
    bar_speed = epochs_in_dataset(1).bar_speed;
    bar_distance = epochs_in_dataset(1).distance;

    screenMidPoint = bar_distance/2;
    barMidPoint = bar_length/2;
    timeToMidPoint = 1E3 * (screenMidPoint+barMidPoint) / bar_speed; %ms

    psth_length = ceil(total_ms/binSize);    

    all_angles = round([epochs_in_dataset.bar_angle]);
    bar_angles = sort(unique(all_angles));
    N_angles = length(bar_angles);

    N_epochs_per_angle = zeros(N_angles,1);
    spikes_pre_mean = zeros(N_angles,1);

    spikes_full_mean = zeros(N_angles,1);
    spikes_leading_mean = zeros(N_angles,1);
    spikes_trailing_mean = zeros(N_angles,1);
    spikes_full_sem = zeros(N_angles,1);
    spikes_leading_sem = zeros(N_angles,1);
    spikes_trailing_sem = zeros(N_angles,1);
    leading_trailing_index = zeros(N_angles,1);
    peak_rate_leading = zeros(N_angles,1);
    peak_rate_trailing = zeros(N_angles,1);
    psth_by_angle = zeros(N_angles,psth_length);

    for s=1:N_angles
        ind = find(all_angles == bar_angles(s));
        N_epochs_per_angle(s) = length(ind);
        pre_spikes = zeros(N_epochs_per_angle(s),1);
        spikes_full = zeros(N_epochs_per_angle(s),1);
        spikes_leading = zeros(N_epochs_per_angle(s),1);
        spikes_trailing = zeros(N_epochs_per_angle(s),1);
        for i=1:N_epochs_per_angle(s)
            pre_spikes(i) = spikes_in_interval(epochs_in_dataset(ind(i)),pre_stim_tail,'pre');
            [spikes_leading(i), spikes_trailing(i)] = spikes_in_mb_epoch(epochs_in_dataset(ind(i)),...
                pre_stim_tail.pre_time, pre_stim_tail.stim_time, bar_speed, bar_distance, bar_length);
            spikes_full(i) = spikes_leading(i) + spikes_trailing(i);
        end
        if s==1
            [psth_x, psth_by_angle(s,:)] = psth_for_epochs(epochs_in_dataset_table & epochs_in_dataset(ind), binSize);
        else
            [~, psth_by_angle(s,:)] = psth_for_epochs(epochs_in_dataset_table & epochs_in_dataset(ind), binSize);
        end
        %get peak of psth for leading and trailing here
        psth_x_shifted = psth_x * 1E3 - pre_stim_tail.pre_time; %in ms

        peak_rate_leading(s) = max(psth_by_angle(s,psth_x_shifted>0 & psth_x_shifted <= timeToMidPoint));
        peak_rate_trailing(s) = max(psth_by_angle(s,psth_x_shifted > timeToMidPoint & psth_x_shifted <= pre_stim_tail.stim_time));
        
        spikes_pre_mean(s) = mean(pre_spikes);

        spikes_full_mean(s) = mean(spikes_full);
        spikes_leading_mean(s) = mean(spikes_leading);
        spikes_trailing_mean(s) = mean(spikes_trailing);
        spikes_full_sem(s) = std(spikes_full)./sqrt(N_epochs_per_angle(s)-1);
        spikes_leading_sem(s) = std(spikes_leading)./sqrt(N_epochs_per_angle(s)-1);
        spikes_trailing_sem(s) = std(spikes_trailing)./sqrt(N_epochs_per_angle(s)-1);
        leading_trailing_index(s) = (spikes_leading_mean(s) - spikes_trailing_mean(s)) / (spikes_leading_mean(s) + spikes_trailing_mean(s));

    end
    ds_struct_full = computeDSIandOSI(bar_angles, spikes_full_mean');
    ds_struct_leading = computeDSIandOSI(bar_angles, spikes_leading_mean');
    ds_struct_trailing = computeDSIandOSI(bar_angles, spikes_trailing_mean');

    baseline_rate = mean(spikes_pre_mean) / (pre_stim_tail.pre_time / 1E3); %baseline rate in Hz

    %set table variables
    R.dsi(d) = ds_struct_full.DSI;
    R.ds_ang(d) = ds_struct_full.DSang;
    R.dsi_leading(d) = ds_struct_leading.DSI;
    R.ds_ang_leading(d) = ds_struct_leading.DSang;
    R.dsi_trailing(d) = ds_struct_trailing.DSI;
    R.ds_ang_trailing(d) = ds_struct_trailing.DSang;
    R.file_name(d) = datasets_struct(d).file_name;
    R.dataset_name(d) = datasets_struct(d).dataset_name;
    R.source_id(d) = datasets_struct(d).source_id;
    R.bar_angles(d) = {bar_angles'};
    R.bar_length(d) = bar_length;
    R.bar_speed(d) = bar_speed;
    R.bar_width(d) = bar_width;
    R.bar_distance(d) = bar_distance;
    R.pre_time_ms(d) = pre_stim_tail.pre_time;
    R.stim_time_ms(d) = pre_stim_tail.stim_time;
    R.tail_time_ms(d) = pre_stim_tail.tail_time;
    R.spikes_full_mean(d) = {spikes_full_mean};
    R.spikes_leading_mean(d) = {spikes_leading_mean};
    R.spikes_trailing_mean(d) = {spikes_trailing_mean};
    R.spikes_full_sem(d) = {spikes_full_sem};
    R.spikes_leading_sem(d) = {spikes_leading_sem};
    R.spikes_trailing_sem(d) = {spikes_trailing_sem};
    R.n_epochs_per_angle(d) = {N_epochs_per_angle};
    R.leading_trailing_index(d) = {leading_trailing_index};
    R.psth_by_angle(d) = {psth_by_angle};
    R.psth_x(d) = {psth_x};
    R.baseline_rate_hz(d) = baseline_rate;
    fprintf('Elapsed time = %d seconds\n', round(toc));
end
