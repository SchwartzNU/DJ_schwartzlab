%% 2 random weird entries
insert(sln_animal.Genotype, {...
    1766, 'Rosa26', 1, 9731, 'Ai14','paternal';
    1766, 'Rosa26', 2, 9731, 'WT','maternal';
    1766, 'Slc17a6', 1, 9732,'VGluT2-Cre','paternal';
    1766, 'Slc17a6', 2, 9732,'VGluT2-Cre','maternal';
    1766, 'Chat', 1, 9733,'Chat-Cre','maternal';
    1766, 'Chat', 2, 9733,'WT','paternal';
    1767, 'Cck', 1, 8419, 'CCK-Cre','maternal';
    1767, 'Cck', 2, 8419, 'CCK-Cre','paternal';
    1767, 'Rosa26', 1, 8420, 'WT','maternal';
    1767, 'Rosa26', 2, 8420, 'WT','paternal';
    });

%% find the animals with a single genotyping event and split by allele
% aggr(proj(sln_animal.Animal) * proj(sln_animal.GeneLocus), sln_animal.AnimalEvent * sln_animal.GenotypeResult, 'count(*)->n')
Q = proj((...
        aggr(...
            proj(sln_animal.Animal) * proj(sln_animal.GeneLocus),...
            sln_animal.AnimalEvent * sln_animal.GenotypeResult,...
            'count(*)->n')...
        & 'n=1' )...
        * proj(sln_animal.AnimalEvent,'animal_id')...
        * sln_animal.GenotypeResult,...
        '*', '(allele1 != "ambiguous" AND allele2 is not null AND allele1 = allele2 AND allele1 != "WT") -> homozygous_mutant',...
        '(allele1 != "ambiguous" AND allele2 is not null AND allele1 = allele2 AND allele1 = "WT") -> homozygous_wt');


Q1 = proj(Q & 'allele1 != "ambiguous"', 'n->allele_id', 'allele1->allele_name','homozygous_mutant','homozygous_wt');
Q2 = proj(Q & 'allele2!=""', 'n+1->allele_id', 'allele2->allele_name','homozygous_mutant','homozygous_wt');
%almost ready to insert, but need to know the inheritance pattern

%% we genotyped mom
Q_mom_info = (...
        proj(sln_animal.Animal,'source_id->breeding_id')...
        * proj(sln_animal.BreedingPair,'source_id->breeding_id','female_id')...
    ) * proj(Q,'locus_name','homozygous_mutant->mom_is_homozygous_mutant','homozygous_wt->mom_is_homozygous_wt','animal_id->female_id','event_id->mom_event_id')...
    * Q1;
% if mom is homozygous mutant, then any WT alleles come from dad
% if mom is homozygous wt, then any mutant alleles come from dad
% if animal is homozygous, then one allele had to come from mom. We will assign Q1 to mom in this case and Q2 to dad
% if animal is het and parents are both hets, it is ambiguous
Q_mom_inh = proj(Q_mom_info,'*',...
    'IF(homozygous_mutant=1 OR homozygous_wt =1, "maternal",IF(allele_name = "WT", IF(mom_is_homozygous_mutant=1, "paternal",null), IF(allele_name != "ambiguous" AND mom_is_homozygous_wt=1, "paternal", null)))-> inheritance');
t1_mom = struct2table(fetch(Q_mom_inh,'*'));
t1_mom(:,{'breeding_id','female_id','mom_event_id','mom_is_homozygous_mutant','mom_is_homozygous_wt','homozygous_mutant','homozygous_wt'}) = [];

%% we genotyped dad
Q_dad_info = (...
        proj(sln_animal.Animal,'source_id->breeding_id')...
        * proj(sln_animal.BreedingPair,'source_id->breeding_id','male_id')...
    ) * proj(Q,'locus_name','homozygous_mutant->dad_is_homozygous_mutant','homozygous_wt->dad_is_homozygous_wt','animal_id->male_id','event_id->dad_event_id')...
    * Q1;
% see above
Q_dad_inh = proj(Q_dad_info,'*',...
    'IF(homozygous_mutant=1 OR homozygous_wt =1, "maternal", IF(allele_name = "WT", IF(dad_is_homozygous_mutant=1, "maternal",null), IF(allele_name != "ambiguous" AND dad_is_homozygous_wt=1, "maternal", null)))-> inheritance');
t1_dad = struct2table(fetch(Q_dad_inh,'*'));
t1_dad(:,{'breeding_id','male_id','dad_event_id','dad_is_homozygous_mutant','dad_is_homozygous_wt','homozygous_mutant','homozygous_wt'}) = [];

%% mom is from JAX -- we assume homozygous
Q_mom_info = ...
    proj(sln_animal.Animal,'source_id->breeding_id')...
    * proj(sln_animal.BreedingPair,'source_id->breeding_id','female_id')...
     * proj(sln_animal.Animal & 'source_id=1', 'strain_name="WT" -> mom_is_homozygous_wt', 'strain_name!="WT" -> mom_is_homozygous_mutant', 'animal_id->female_id' ,'strain_name')...
     * sln_animal.StrainAllele...
    * Q1;
Q_mom_inh = proj(Q_mom_info,'*',...
    'IF(homozygous_mutant=1 OR homozygous_wt =1, "maternal",IF(allele_name = "WT", IF(mom_is_homozygous_mutant=1, "paternal",null), IF(allele_name != "ambiguous" AND mom_is_homozygous_wt=1, "paternal", null)))-> inheritance');
t2_mom = struct2table(fetch(Q_mom_inh,'*'));
t2_mom(:,{'breeding_id','female_id','mom_is_homozygous_mutant','mom_is_homozygous_wt','homozygous_mutant','homozygous_wt','strain_name','background_name'}) = [];

%% dad is from JAX -- we assume homozygous
Q_dad_info = ...
    proj(sln_animal.Animal,'source_id->breeding_id')...
    * proj(sln_animal.BreedingPair,'source_id->breeding_id','male_id')...
     * proj(sln_animal.Animal & 'source_id=1', 'strain_name="WT" -> dad_is_homozygous_wt', 'strain_name!="WT" -> dad_is_homozygous_mutant', 'animal_id->male_id', 'strain_name')...
    * sln_animal.StrainAllele...
    * Q1;
Q_dad_inh = proj(Q_dad_info,'*',...
    'IF(homozygous_mutant=1 OR homozygous_wt =1, "maternal",IF(allele_name = "WT", IF(dad_is_homozygous_mutant=1, "maternal",null), IF(allele_name != "ambiguous" AND dad_is_homozygous_wt=1, "maternal", null)))-> inheritance');
t2_dad = struct2table(fetch(Q_dad_inh,'*'));
t2_dad(:,{'breeding_id','male_id','dad_is_homozygous_mutant','dad_is_homozygous_wt','homozygous_mutant','homozygous_wt','strain_name','background_name'}) = [];

%% mom is from a collaborator but never genotyped -- don't assume genotype unless WT
Q_mom_info = ...
    ((proj(sln_animal.Animal,'source_id->breeding_id')...
    * proj(sln_animal.BreedingPair,'source_id->breeding_id','female_id')...
     * proj(sln_animal.Animal & sln_animal.Collaborator, 'strain_name="WT" -> mom_is_homozygous_wt', 'animal_id->female_id' ,'strain_name')...
     * sln_animal.StrainAllele) - proj(Q, 'animal_id->female_id'))...
    * Q1;
Q_mom_inh = proj(Q_mom_info,'*',...
    'IF(homozygous_mutant=1 OR homozygous_wt =1, "maternal",IF(allele_name = "WT", null, IF(allele_name != "ambiguous" AND mom_is_homozygous_wt=1, "paternal", null)))-> inheritance');
t3_mom = struct2table(fetch(Q_mom_inh,'*'));
t3_mom(:,{'breeding_id','female_id','mom_is_homozygous_wt','homozygous_mutant','homozygous_wt','strain_name','background_name'}) = [];

%% dad is from a collaborator but never genotyped -- don't assume genotype unless WT
Q_dad_info = ...
    ((proj(sln_animal.Animal,'source_id->breeding_id')...
    * proj(sln_animal.BreedingPair,'source_id->breeding_id','male_id')...
     * proj(sln_animal.Animal & sln_animal.Collaborator, 'strain_name="WT" -> dad_is_homozygous_wt', 'animal_id->male_id' ,'strain_name')...
     * sln_animal.StrainAllele) - proj(Q, 'animal_id->male_id'))...
    * Q1;
Q_dad_inh = proj(Q_dad_info,'*',...
    'IF(homozygous_mutant=1 OR homozygous_wt =1, "maternal",IF(allele_name = "WT", null, IF(allele_name != "ambiguous" AND dad_is_homozygous_wt=1, "maternal", null)))-> inheritance');
t3_dad = struct2table(fetch(Q_dad_inh,'*'));
t3_dad(:,{'breeding_id','male_id','dad_is_homozygous_wt','homozygous_mutant','homozygous_wt','strain_name','background_name'}) = [];

%% mom has no source but never genotyped -- don't assume genotype unless WT
Q_mom_info = ...
    ((proj(sln_animal.Animal,'source_id->breeding_id')...
    * proj(sln_animal.BreedingPair,'source_id->breeding_id','female_id')...
     * proj(sln_animal.Animal & 'source_id is null', 'strain_name="WT" -> mom_is_homozygous_wt', 'animal_id->female_id' ,'strain_name')...
     * sln_animal.StrainAllele) - proj(Q, 'animal_id->female_id'))...
    * Q1;
Q_mom_inh = proj(Q_mom_info,'*',...
    'IF(homozygous_mutant=1 OR homozygous_wt =1, "maternal",IF(allele_name = "WT", null, IF(allele_name != "ambiguous" AND mom_is_homozygous_wt=1, "paternal", null)))-> inheritance');

% empty
% t?_mom = struct2table(fetch(Q_mom_inh,'*'));
% t?_mom(:,{'breeding_id','female_id','mom_is_homozygous_wt','homozygous_mutant','homozygous_wt','strain_name'}) = [];
t4_mom = t3_mom;
t4_mom(:,:) = [];

%% dad has no source but never genotyped -- don't assume genotype unless WT
Q_dad_info = ...
    ((proj(sln_animal.Animal,'source_id->breeding_id')...
    * proj(sln_animal.BreedingPair,'source_id->breeding_id','male_id')...
     * proj(sln_animal.Animal & 'source_id is null', 'strain_name="WT" -> dad_is_homozygous_wt', 'animal_id->male_id' ,'strain_name')...
     * sln_animal.StrainAllele) - proj(Q, 'animal_id->male_id'))...
    * Q1;
Q_dad_inh = proj(Q_dad_info,'*',...
    'IF(homozygous_mutant=1 OR homozygous_wt =1, "maternal",IF(allele_name = "WT", null, IF(allele_name != "ambiguous" AND dad_is_homozygous_wt=1, "maternal", null)))-> inheritance');

t4_dad = struct2table(fetch(Q_dad_inh,'*'));
t4_dad(:,{'breeding_id','male_id','dad_is_homozygous_wt','homozygous_mutant','homozygous_wt','strain_name','background_name'}) = [];


%% repeat of above but for Q2 -- note that we treat homozygous offspring differently for Q1 and Q2
% we genotyped mom
Q_mom_info = (...
        proj(sln_animal.Animal,'source_id->breeding_id')...
        * proj(sln_animal.BreedingPair,'source_id->breeding_id','female_id')...
    ) * proj(Q,'locus_name','homozygous_mutant->mom_is_homozygous_mutant','homozygous_wt->mom_is_homozygous_wt','animal_id->female_id','event_id->mom_event_id')...
    * Q2;
% if mom is homozygous mutant, then any WT alleles come from dad
% if mom is homozygous wt, then any mutant alleles come from dad
% if animal is homozygous, then one allele had to come from mom. We will assign Q1 to mom in this case and Q2 to dad
% if animal is het and parents are both hets, it is ambiguous
Q_mom_inh = proj(Q_mom_info,'*',...
    'IF(homozygous_mutant=1 OR homozygous_wt =1, "paternal",IF(allele_name = "WT", IF(mom_is_homozygous_mutant=1, "paternal",null), IF(allele_name != "ambiguous" AND mom_is_homozygous_wt=1, "paternal", null)))-> inheritance');
t5_mom = struct2table(fetch(Q_mom_inh,'*'));
t5_mom(:,{'breeding_id','female_id','mom_event_id','mom_is_homozygous_mutant','mom_is_homozygous_wt','homozygous_mutant','homozygous_wt'}) = [];

% we genotyped dad
Q_dad_info = (...
        proj(sln_animal.Animal,'source_id->breeding_id')...
        * proj(sln_animal.BreedingPair,'source_id->breeding_id','male_id')...
    ) * proj(Q,'locus_name','homozygous_mutant->dad_is_homozygous_mutant','homozygous_wt->dad_is_homozygous_wt','animal_id->male_id','event_id->dad_event_id')...
    * Q2;
% see above
Q_dad_inh = proj(Q_dad_info,'*',...
    'IF(homozygous_mutant=1 OR homozygous_wt =1, "paternal", IF(allele_name = "WT", IF(dad_is_homozygous_mutant=1, "maternal",null), IF(allele_name != "ambiguous" AND dad_is_homozygous_wt=1, "maternal", null)))-> inheritance');
t5_dad = struct2table(fetch(Q_dad_inh,'*'));
t5_dad(:,{'breeding_id','male_id','dad_event_id','dad_is_homozygous_mutant','dad_is_homozygous_wt','homozygous_mutant','homozygous_wt'}) = [];

% mom is from JAX -- we assume homozygous
Q_mom_info = ...
    proj(sln_animal.Animal,'source_id->breeding_id')...
    * proj(sln_animal.BreedingPair,'source_id->breeding_id','female_id')...
     * proj(sln_animal.Animal & 'source_id=1', 'strain_name="WT" -> mom_is_homozygous_wt', 'strain_name!="WT" -> mom_is_homozygous_mutant', 'animal_id->female_id','strain_name')...
    * sln_animal.StrainAllele...
    * Q2;
Q_mom_inh = proj(Q_mom_info,'*',...
    'IF(homozygous_mutant=1 OR homozygous_wt =1, "paternal",IF(allele_name = "WT", IF(mom_is_homozygous_mutant=1, "paternal",null), IF(allele_name != "ambiguous" AND mom_is_homozygous_wt=1, "paternal", null)))-> inheritance');
t6_mom = struct2table(fetch(Q_mom_inh,'*'));
t6_mom(:,{'breeding_id','female_id','mom_is_homozygous_mutant','mom_is_homozygous_wt','homozygous_mutant','homozygous_wt','strain_name','background_name'}) = [];

%
Q_dad_info = ...
    proj(sln_animal.Animal,'source_id->breeding_id')...
    * proj(sln_animal.BreedingPair,'source_id->breeding_id','male_id')...
     * proj(sln_animal.Animal & 'source_id=1', 'strain_name="WT" -> dad_is_homozygous_wt', 'strain_name!="WT" -> dad_is_homozygous_mutant', 'animal_id->male_id','strain_name')...
    * sln_animal.StrainAllele...
    * Q2;
Q_dad_inh = proj(Q_dad_info,'*',...
    'IF(homozygous_mutant=1 OR homozygous_wt =1, "paternal",IF(allele_name = "WT", IF(dad_is_homozygous_mutant=1, "maternal",null), IF(allele_name != "ambiguous" AND dad_is_homozygous_wt=1, "maternal", null)))-> inheritance');
t6_dad = struct2table(fetch(Q_dad_inh,'*'));
t6_dad(:,{'breeding_id','male_id','dad_is_homozygous_mutant','dad_is_homozygous_wt','homozygous_mutant','homozygous_wt','strain_name','background_name'}) = [];

%
Q_mom_info = ...
    ((proj(sln_animal.Animal,'source_id->breeding_id')...
    * proj(sln_animal.BreedingPair,'source_id->breeding_id','female_id')...
     * proj(sln_animal.Animal & sln_animal.Collaborator, 'strain_name="WT" -> mom_is_homozygous_wt', 'animal_id->female_id' ,'strain_name')...
     * sln_animal.StrainAllele) - proj(Q, 'animal_id->female_id'))...
    * Q2;
Q_mom_inh = proj(Q_mom_info,'*',...
    'IF(homozygous_mutant=1 OR homozygous_wt =1, "paternal",IF(allele_name = "WT", null, IF(allele_name != "ambiguous" AND mom_is_homozygous_wt=1, "paternal", null)))-> inheritance');
t7_mom = struct2table(fetch(Q_mom_inh,'*'));
t7_mom(:,{'breeding_id','female_id','mom_is_homozygous_wt','homozygous_mutant','homozygous_wt','strain_name','background_name'}) = [];

%
Q_dad_info = ...
    ((proj(sln_animal.Animal,'source_id->breeding_id')...
    * proj(sln_animal.BreedingPair,'source_id->breeding_id','male_id')...
     * proj(sln_animal.Animal & sln_animal.Collaborator, 'strain_name="WT" -> dad_is_homozygous_wt', 'animal_id->male_id' ,'strain_name')...
     * sln_animal.StrainAllele) - proj(Q, 'animal_id->male_id'))...
    * Q2;
Q_dad_inh = proj(Q_dad_info,'*',...
    'IF(homozygous_mutant=1 OR homozygous_wt =1, "paternal",IF(allele_name = "WT", null, IF(allele_name != "ambiguous" AND dad_is_homozygous_wt=1, "maternal", null)))-> inheritance');
t7_dad = struct2table(fetch(Q_dad_inh,'*'));
t7_dad(:,{'breeding_id','male_id','dad_is_homozygous_wt','homozygous_mutant','homozygous_wt','strain_name','background_name'}) = [];

%

Q_mom_info = ...
    ((proj(sln_animal.Animal,'source_id->breeding_id')...
    * proj(sln_animal.BreedingPair,'source_id->breeding_id','female_id')...
     * proj(sln_animal.Animal & 'source_id is null', 'strain_name="WT" -> mom_is_homozygous_wt', 'animal_id->female_id' ,'strain_name')...
     * sln_animal.StrainAllele) - proj(Q, 'animal_id->female_id'))...
    * Q2;
Q_mom_inh = proj(Q_mom_info,'*',...
    'IF(homozygous_mutant=1 OR homozygous_wt =1, "paternal",IF(allele_name = "WT", null, IF(allele_name != "ambiguous" AND mom_is_homozygous_wt=1, "paternal", null)))-> inheritance');

% empty
% t?_mom = struct2table(fetch(Q_mom_inh,'*'));
% t?_mom(:,{'breeding_id','female_id','mom_is_homozygous_wt','homozygous_mutant','homozygous_wt','strain_name'}) = [];
t8_mom = t3_mom;
t8_mom(:,:) = [];

% 

Q_dad_info = ...
    ((proj(sln_animal.Animal,'source_id->breeding_id')...
    * proj(sln_animal.BreedingPair,'source_id->breeding_id','male_id')...
     * proj(sln_animal.Animal & 'source_id is null', 'strain_name="WT" -> dad_is_homozygous_wt', 'animal_id->male_id' ,'strain_name')...
     * sln_animal.StrainAllele) - proj(Q, 'animal_id->male_id'))...
    * Q2;
Q_dad_inh = proj(Q_dad_info,'*',...
    'IF(homozygous_mutant=1 OR homozygous_wt =1, "paternal",IF(allele_name = "WT", null, IF(allele_name != "ambiguous" AND dad_is_homozygous_wt=1, "maternal", null)))-> inheritance');

% empty
% t4_dad = struct2table(fetch(Q_dad_inh,'*'));
% t4_dad(:,{'breeding_id','male_id','dad_is_homozygous_wt','homozygous_mutant','homozygous_wt','strain_name'}) = [];
t8_dad = t3_dad;
t8_dad(:,:) = [];


%% merge, clean, and insert 
mrg = outerjoin([t1_mom;t2_mom;t3_mom;t4_mom;t5_mom;t6_mom;t7_mom;t8_mom],[t1_dad;t2_dad;t3_dad;t4_dad;t5_dad;t6_dad;t7_dad;t8_dad],'mergekeys',1,'keys',{'animal_id','locus_name','allele_id','allele_name','event_id'});
mrg.inheritance = mrg.inheritance_left;
mrg(~strcmp(mrg.inheritance_right,''),{'inheritance'}) = mrg(~strcmp(mrg.inheritance_right,''),{'inheritance_right'});
mrg(:,{'inheritance_left','inheritance_right'}) = [];
mrg = table2struct(unique(mrg));
[mrg(strcmp({mrg(:).inheritance},'')).inheritance] = deal(nan);

insert(sln_animal.Genotype,mrg);

%% handle jax animals

la = struct2table(fetch(sln_animal.GenotypeResult & 'allele1 != "ambiguous"' & 'allele1 != "WT"','locus_name', 'allele1->allele_name'));
la = unique( la(:,{'allele_name','locus_name'}));

o = struct2table(fetch((sln_animal.Animal & 'source_id=1' & 'strain_name != "WT"' )* sln_animal.StrainAllele, '*'));
o = o(:, {'animal_id', 'allele_name'});

jax = table2struct(outerjoin(o, la, 'type', 'left', 'mergekeys', 1));
[jax(strcmp({jax(:).allele_name}, 'PDGFRb-CreER')).locus_name] = deal('PDGFRb');

[jax(:).allele_id] = deal(1);
insert(sln_animal.Genotype,jax);

[jax(:).allele_id] = deal(2);
insert(sln_animal.Genotype,jax);

%% animals with unknown source -> no known inheritance, insert as is

insert(sln_animal.Genotype, fetch(Q1 & (sln_animal.Animal & 'source_id is null'), 'allele_id','allele_name'));
insert(sln_animal.Genotype, fetch(Q2 & (sln_animal.Animal & 'source_id is null'), 'allele_id','allele_name'));


%% if animal is homozygous, we know that one allele came from each parent, even if we don't match
% this check catches a few strays
t0 = struct2table(fetch(proj(Q1-proj(sln_animal.Genotype), '*', 'IF(homozygous_mutant=1 OR homozygous_wt=1, "maternal", null) -> inheritance') & 'homozygous_mutant=1 OR homozygous_wt=1',...
    'allele_id','allele_name','inheritance'));
t00 = struct2table(fetch(proj(Q2-proj(sln_animal.Genotype), '*', 'IF(homozygous_mutant=1 OR homozygous_wt=1, "paternal", null) -> inheritance') & 'homozygous_mutant=1 OR homozygous_wt=1',...
    'allele_id','allele_name','inheritance'));
insert(sln_animal.Genotype,table2struct([t0;t00]));

%% animals with parents that were bred internally but never genotyped
% if other parent is of wrong strain we will assume inheritance...
t = proj((sln_animal.AnimalEvent * sln_animal.GenotypeResult & 'locus_name="ifi208"' & 'allele1!="ambiguous"') & proj(sln_animal.Animal & 'source_id=1009'), 'animal_id','locus_name','allele1->allele_name','if(true,1,1)->allele_id','if(true,"paternal","paternal")->inheritance');
insert(sln_animal.Genotype, fetch(t,'*'));

%% misc
insert(sln_animal.Genotype, {1779, 'Rosa26', 2, 8448, 'RIK', 'maternal'});
update(sln_animal.Genotype & 'animal_id=1638', 'inheritance','maternal'); %concerning...
insert(sln_animal.Genotype, {1638, 'Rosa26', 2, 7926, 'WT', 'paternal'});
insert(sln_animal.Genotype, {1638, 'Slc17a6', 1, 7925, 'VGluT2-Cre', 'paternal'});


update(sln_animal.Genotype & 'animal_id=1853', 'inheritance','maternal'); %concerning...
insert(sln_animal.Genotype, {1853, 'Rosa26', 2, 9180, 'WT', 'paternal'});
insert(sln_animal.Genotype, {1853, 'Slc17a6', 1, 9179, 'VGluT2-Cre', 'paternal'});


%% check parents that have been inserted above and enter children with inheritance
missing = (sln_animal.AnimalEvent * proj(sln_animal.GenotypeResult & 'allele1 != "ambiguous"','allele1->allele_name', 'locus_name') * proj(sln_animal.Allele)) - (proj(sln_animal.Genotype,'*','event_id->xx') * proj(sln_animal.AnimalEvent));

missing_dad = proj(sln_animal.Animal,'animal_id->male_id','strain_name') * sln_animal.StrainAllele * (missing * proj(sln_animal.Animal,'source_id') * proj(sln_animal.BreedingPair,'male_id'));
missing_dad = proj(missing_dad, 'animal_id->child_id', 'event_id->x1','source_id->x2','strain_name->x3');
dad_zygosity = sln_animal.Genotype & proj(proj(sln_animal.Animal * sln_animal.StrainAllele, 'animal_id->male_id') & missing_dad, 'male_id->animal_id');

t0 = proj(missing,'animal_id','locus_name','if(true,"paternal","paternal")->inheritance', 'if(true,1,1)->allele_id') & (aggr(missing_dad, dad_zygosity,'count(allele_id)=2->parent_homozygous', 'count(allele_id)=1->parent_heterozygous', 'child_id->animal_id') & 'parent_homozygous=1');

missing_mom = proj(sln_animal.Animal,'animal_id->female_id','strain_name') * sln_animal.StrainAllele * (missing * proj(sln_animal.Animal,'source_id') * proj(sln_animal.BreedingPair,'female_id'));
missing_mom = proj(missing_mom, 'animal_id->child_id', 'event_id->x1','source_id->x2','strain_name->x3');
mom_zygosity = sln_animal.Genotype & proj(proj(sln_animal.Animal * sln_animal.StrainAllele, 'animal_id->female_id') & missing_mom, 'female_id->animal_id');

t00 = proj(missing,'animal_id','locus_name','if(true,"maternal","maternal")->inheritance', 'if(true,1,1)->allele_id') & (aggr(missing_mom, mom_zygosity,'count(allele_id)=2->parent_homozygous', 'count(allele_id)=1->parent_heterozygous', 'child_id->animal_id') & 'parent_homozygous=1');

insert(sln_animal.Genotype, fetch(t0,'*'));
% insert(sln_animal.Genotype, fetch(t00,'*'));

missing = (sln_animal.AnimalEvent * proj(sln_animal.GenotypeResult & 'allele2 is not null AND allele2!= "ambiguous"','allele1->allele_name', 'locus_name') * proj(sln_animal.Allele)) - (proj(sln_animal.Genotype,'*','event_id->xx') * proj(sln_animal.AnimalEvent));
missing_dad = proj(sln_animal.Animal,'animal_id->male_id','strain_name') * sln_animal.StrainAllele * (missing * proj(sln_animal.Animal,'source_id') * proj(sln_animal.BreedingPair,'male_id'));
missing_dad = proj(missing_dad, 'animal_id->child_id', 'event_id->x1','source_id->x2','strain_name->x3');
dad_zygosity = sln_animal.Genotype & proj(proj(sln_animal.Animal * sln_animal.StrainAllele, 'animal_id->male_id') & missing_dad, 'male_id->animal_id');

t0 = proj(missing,'animal_id','locus_name','if(true,"paternal","paternal")->inheritance', 'if(true,2,2)->allele_id') & (aggr(missing_dad, dad_zygosity,'count(allele_id)=2->parent_homozygous', 'count(allele_id)=1->parent_heterozygous', 'child_id->animal_id') & 'parent_homozygous=1');

missing_mom = proj(sln_animal.Animal,'animal_id->female_id','strain_name') * sln_animal.StrainAllele * (missing * proj(sln_animal.Animal,'source_id') * proj(sln_animal.BreedingPair,'female_id'));
missing_mom = proj(missing_mom, 'animal_id->child_id', 'event_id->x1','source_id->x2','strain_name->x3');
mom_zygosity = sln_animal.Genotype & proj(proj(sln_animal.Animal * sln_animal.StrainAllele, 'animal_id->female_id') & missing_mom, 'female_id->animal_id');

t00 = proj(missing,'animal_id','locus_name','if(true,"maternal","maternal")->inheritance', 'if(true,2,2)->allele_id') & (aggr(missing_mom, mom_zygosity,'count(allele_id)=2->parent_homozygous', 'count(allele_id)=1->parent_heterozygous', 'child_id->animal_id') & 'parent_homozygous=1');

% insert(sln_animal.Genotype, fetch(t0,'*'));
% insert(sln_animal.Genotype, fetch(t00,'*'));

%%
%search for missing:
% (sln_animal.Animal & (sln_animal.AnimalEvent * proj(sln_animal.GenotypeResult & 'allele1 != "ambiguous"'))) - sln_animal.Genotype

% (sln_animal.AnimalEvent * proj(sln_animal.GenotypeResult & 'allele1 != "ambiguous"','allele1->allele_name') * sln_animal.Allele) - sln_animal.Genotype

